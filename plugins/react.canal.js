const handler = async (m, { conn, args }) => {
    // Verificaci√≥n b√°sica de argumentos
    if (!args || args.length < 2) {
        return m.reply(`Ejemplo de uso:\n.chReact https://whatsapp.com/channel/xxxx "texto de reacci√≥n"`);
    }

    // Validaci√≥n del enlace del canal
    const validLinkPatterns = [
        /^https:\/\/whatsapp\.com\/channel\/[A-Z0-9]{22}$/i,
        /^https:\/\/whatsapp\.com\/channel\/[A-Z0-9]{22}\/[A-Z0-9]+$/i
    ];
    
    const isValidLink = validLinkPatterns.some(pattern => pattern.test(args[0]));
    if (!isValidLink) {
        return m.reply("Enlace no v√°lido. Debe ser un enlace de canal de WhatsApp v√°lido.");
    }

    // Mapeo de caracteres a emojis estilizados
    const styleMap = {
        a: 'üÖê', b: 'üÖë', c: 'üÖí', d: 'üÖì', e: 'üÖî', f: 'üÖï', g: 'üÖñ',
        h: 'üÖó', i: 'üÖò', j: 'üÖô', k: 'üÖö', l: 'üÖõ', m: 'üÖú', n: 'üÖù',
        o: 'üÖû', p: 'üÖü', q: 'üÖ†', r: 'üÖ°', s: 'üÖ¢', t: 'üÖ£', u: 'üÖ§',
        v: 'üÖ•', w: 'üÖ¶', x: 'üÖß', y: 'üÖ®', z: 'üÖ©',
        0: '‚ìø', 1: '‚ûä', 2: '‚ûã', 3: '‚ûå', 4: '‚ûç',
        5: '‚ûé', 6: '‚ûè', 7: '‚ûê', 8: '‚ûë', 9: '‚ûí',
        ' ': '‚Äï'
    };

    // Procesar el texto de reacci√≥n
    const reactionText = args.slice(1).join(' ').toLowerCase();
    const emojiReaction = reactionText.split('').map(c => styleMap[c] || c).join('');

    try {
        // Extraer informaci√≥n del enlace
        const urlParts = args[0].split('/');
        const channelId = urlParts[4];
        const messageId = urlParts[5] || null; // Manejar caso sin messageId

        // Obtener metadatos del canal
        const channelInfo = await conn.newsletterMetadata("invite", channelId);
        if (!channelInfo) {
            return m.reply("No se pudo obtener informaci√≥n del canal.");
        }

        // Verificar si el mensaje existe
        if (!messageId) {
            return m.reply("El enlace debe incluir el ID del mensaje.");
        }

        // Enviar reacci√≥n
        await conn.newsletterReactMessage(channelInfo.id, messageId, emojiReaction);

        return m.reply(`‚úÖ Reacci√≥n *${emojiReaction}* enviada correctamente al mensaje en el canal *${channelInfo.name}*.`);
    } catch (error) {
        console.error('Error en chReact:', error);
        
        // Manejo de errores espec√≠ficos
        if (error.message.includes('not found')) {
            return m.reply("El canal o mensaje no fue encontrado. Verifica el enlace.");
        }
        if (error.message.includes('react')) {
            return m.reply("Error al enviar la reacci√≥n. ¬øTienes permiso para reaccionar?");
        }
        
        return m.reply("Ocurri√≥ un error inesperado. Por favor intenta nuevamente.");
    }
};

handler.help = ['chReact <enlace_canal> <texto>'];
handler.tags = ['channel'];
handler.command = /^(channelreact|chreact)$/i;
handler.group = false; // Solo funciona en chats privados
handler.admin = false; // No requiere privilegios admin

export default handler;
